name: BDMDEBUG C++

on: workflow_dispatch

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  ARROW_ENABLE_TIMING_TESTS: OFF
  DOCKER_VOLUME_PREFIX: ".docker/"

jobs:
  macos:
    name: BDMDEBUG AMD64 macOS 12 C++
    runs-on: macos-latest
    timeout-minutes: 75
    env:
      ARROW_AZURE: ON
      ARROW_BUILD_TESTS: ON
      ARROW_DATASET: ON
      ARROW_FLIGHT: ON
      ARROW_GANDIVA: ON
      ARROW_GCS: ON
      ARROW_HDFS: ON
      ARROW_HOME: /usr/local
      ARROW_JEMALLOC: ON
      ARROW_ORC: ON
      ARROW_PARQUET: ON
      ARROW_S3: ON
      ARROW_SUBSTRAIT: ON
      ARROW_WITH_BROTLI: ON
      ARROW_WITH_BZ2: ON
      ARROW_WITH_LZ4: ON
      # GH-36013 disabling opentelemetry here because we can't
      # get the patched version from conda
      # ARROW_WITH_OPENTELEMETRY: ON
      ARROW_WITH_SNAPPY: ON
      ARROW_WITH_ZLIB: ON
      ARROW_WITH_ZSTD: ON
      GTest_SOURCE: BUNDLED
    steps:
      - name: CPU Info
        run: |
          sysctl -a | grep cpu
          sysctl -a | grep "hw.optional"
      - name: Checkout Arrow
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install Dependencies
        run: |
          brew bundle --file=cpp/Brewfile
      - name: Install MinIO
        run: |
          $(brew --prefix bash)/bin/bash \
            ci/scripts/install_minio.sh latest /usr/local
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install Google Cloud Storage Testbench
        run: ci/scripts/install_gcs_testbench.sh default
      - name: Install Azurite Storage Emulator
        run: ci/scripts/install_azurite.sh
      - name: Setup ccache
        run: |
          ci/scripts/ccache_setup.sh
      - name: ccache info
        id: ccache-info
        run: |
          echo "cache-dir=$(ccache --get-config cache_dir)" >> $GITHUB_OUTPUT
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{ steps.ccache-info.outputs.cache-dir }}
          key: cpp-ccache-macos-${{ hashFiles('cpp/**') }}
          restore-keys: cpp-ccache-macos-
      - name: Build
        run: |
          ci/scripts/cpp_build.sh $(pwd) $(pwd)/build
      - name: Test
        shell: bash
        run: |
          sudo sysctl -w kern.coredump=1
          sudo sysctl -w kern.corefile=core.%N.%P
          ulimit -c unlimited  # must enable within the same shell
          ci/scripts/cpp_test.sh $(pwd) $(pwd)/build
